From 506d3bc5ffe9ae7491155a4f94980c842efe5f7c Mon Sep 17 00:00:00 2001
From: zhanghong <summer.zhanghong@huawei.com>
Date: Fri, 20 Oct 2017 09:49:09 +0800
Subject: [PATCH] HEM5.0_DISABLE_BOUNDARY_BARC

---
 source/Lib/TLibEncoder/TEncCu.cpp | 68 +++++++++++++++++++++++----------------
 1 file changed, 41 insertions(+), 27 deletions(-)

diff --git a/source/Lib/TLibEncoder/TEncCu.cpp b/source/Lib/TLibEncoder/TEncCu.cpp
index 4992bc3..94175ba 100644
--- a/source/Lib/TLibEncoder/TEncCu.cpp
+++ b/source/Lib/TLibEncoder/TEncCu.cpp
@@ -876,45 +876,59 @@ Void TEncCu::compressCtu( TComDataCU* pCtu )
 #if BARC
   if (pCtu->getSlice()->getSliceType() == I_SLICE)
   {
+#if  BARC_DIMD
+    const TComSPS &sps = *(pCtu->getSlice()->getSPS());
+    UInt remainX = sps.getPicWidthInLumaSamples() - pCtu->getCUPelX();
+    UInt remainY = sps.getPicHeightInLumaSamples() - pCtu->getCUPelY();
+    if (!(remainX < uiCTUSize && remainX % 16 != 0) && !(remainY < uiCTUSize && remainY % 16 != 0))
+    {
+#endif
 #if BARC 
-    copyRecToTmp(pCtu, true);
-    TComDataCU* pCtuLuma = pCtu->getPic()->getCtuTmp();
-    pCtuLuma->copyCtu(pCtu);
+      copyRecToTmp(pCtu, true);
+      TComDataCU* pCtuLuma = pCtu->getPic()->getCtuTmp();
+      pCtuLuma->copyCtu(pCtu);
 #endif
-    Double hmCost = pCtu->getTotalCost();
-    UInt   hmDistortion = pCtu->getTotalDistortion();
+      Double hmCost = pCtu->getTotalCost();
+      UInt   hmDistortion = pCtu->getTotalDistortion();
 
-    pCtu->initCtu(pCtu->getPic(), pCtu->getCtuRsAddr());
-    pCtu->initDscaleCtu(CHANNEL_TYPE_LUMA, pCtu->getPic(), pCtu->getCtuRsAddr());
-    pCtu->getPic()->setCodedAreaInCTU(0);
-    pCtu->getPic()->setCodedBlkInCTU(false, 0, 0, uiCTUSize >> MIN_CU_LOG2, uiCTUSize >> MIN_CU_LOG2); //only used for affine merge code or not
+      pCtu->initCtu(pCtu->getPic(), pCtu->getCtuRsAddr());
+      pCtu->initDscaleCtu(CHANNEL_TYPE_LUMA, pCtu->getPic(), pCtu->getCtuRsAddr());
+      pCtu->getPic()->setCodedAreaInCTU(0);
+      pCtu->getPic()->setCodedBlkInCTU(false, 0, 0, uiCTUSize >> MIN_CU_LOG2, uiCTUSize >> MIN_CU_LOG2); //only used for affine merge code or not
 
-    UInt uiBARCCTUSize = (uiCTUSize >> BARC_DScaleRatio);
-    UInt uiBARCWidthIdx = g_aucConvertToBit[uiBARCCTUSize];
-    UInt uiBARCHeightIdx = g_aucConvertToBit[uiBARCCTUSize];
+      UInt uiBARCCTUSize = (uiCTUSize >> BARC_DScaleRatio);
+      UInt uiBARCWidthIdx = g_aucConvertToBit[uiBARCCTUSize];
+      UInt uiBARCHeightIdx = g_aucConvertToBit[uiBARCCTUSize];
 
-    m_ppppcRDSbacCoder[uiBARCWidthIdx][uiBARCHeightIdx][CI_CURR_BEST]->load(m_ppppcRDSbacCoder[uiWidthIdx][uiHeightIdx][CI_CURR_BEST]);
+      m_ppppcRDSbacCoder[uiBARCWidthIdx][uiBARCHeightIdx][CI_CURR_BEST]->load(m_ppppcRDSbacCoder[uiWidthIdx][uiHeightIdx][CI_CURR_BEST]);
 
 #if BARC_CORE
-    TComSlice*  pcSlice = pCtu->getSlice();
-    initEncSliceBARC(CHANNEL_TYPE_LUMA, pCtu->getPic(), 0, pcSlice, true);
-#endif
-    m_pppcBestCU[uiBARCWidthIdx][uiBARCHeightIdx]->initCtu(pCtu->getPic(), pCtu->getCtuRsAddr());
-    m_pppcTempCU[uiBARCWidthIdx][uiBARCHeightIdx]->initCtu(pCtu->getPic(), pCtu->getCtuRsAddr());
-    m_pppcBestCU[uiBARCWidthIdx][uiBARCHeightIdx]->initDscaleCtu(CHANNEL_TYPE_LUMA, pCtu->getPic(), pCtu->getCtuRsAddr());
-    m_pppcTempCU[uiBARCWidthIdx][uiBARCHeightIdx]->initDscaleCtu(CHANNEL_TYPE_LUMA, pCtu->getPic(), pCtu->getCtuRsAddr());
-    xCompressCU(m_pppcBestCU[uiBARCWidthIdx][uiBARCHeightIdx], m_pppcTempCU[uiBARCWidthIdx][uiBARCHeightIdx], BARC_DScaleRatio, uiBARCCTUSize, uiBARCCTUSize, 0 DEBUG_STRING_PASS_INTO(sDebug));
-    upSampleRec(pCtu, CHANNEL_TYPE_LUMA);
+      TComSlice*  pcSlice = pCtu->getSlice();
+      initEncSliceBARC(CHANNEL_TYPE_LUMA, pCtu->getPic(), 0, pcSlice, true);
+#endif
+      m_pppcBestCU[uiBARCWidthIdx][uiBARCHeightIdx]->initCtu(pCtu->getPic(), pCtu->getCtuRsAddr());
+      m_pppcTempCU[uiBARCWidthIdx][uiBARCHeightIdx]->initCtu(pCtu->getPic(), pCtu->getCtuRsAddr());
+      m_pppcBestCU[uiBARCWidthIdx][uiBARCHeightIdx]->initDscaleCtu(CHANNEL_TYPE_LUMA, pCtu->getPic(), pCtu->getCtuRsAddr());
+      m_pppcTempCU[uiBARCWidthIdx][uiBARCHeightIdx]->initDscaleCtu(CHANNEL_TYPE_LUMA, pCtu->getPic(), pCtu->getCtuRsAddr());
+      xCompressCU(m_pppcBestCU[uiBARCWidthIdx][uiBARCHeightIdx], m_pppcTempCU[uiBARCWidthIdx][uiBARCHeightIdx], BARC_DScaleRatio, uiBARCCTUSize, uiBARCCTUSize, 0 DEBUG_STRING_PASS_INTO(sDebug));
+      upSampleRec(pCtu, CHANNEL_TYPE_LUMA);
 #if BARC_CORE
-    initEncSliceBARC(CHANNEL_TYPE_LUMA, pCtu->getPic(), 0, pcSlice, false);
+      initEncSliceBARC(CHANNEL_TYPE_LUMA, pCtu->getPic(), 0, pcSlice, false);
 #endif
-    reComputeBARCDistortion(pCtu, CHANNEL_TYPE_LUMA);
-    if (pCtu->getTotalCost() > hmCost)
+      reComputeBARCDistortion(pCtu, CHANNEL_TYPE_LUMA);
+      if (pCtu->getTotalCost() > hmCost)
+      {
+        pCtu->copyCtu(pCtuLuma);
+        copyRecToTmp(pCtu, false);
+        downSampleRec(pCtu, CHANNEL_TYPE_LUMA);
+      }
+#if BARC_DIMD
+    }
+    else
     {
-      pCtu->copyCtu(pCtuLuma);
-      copyRecToTmp(pCtu, false);
       downSampleRec(pCtu, CHANNEL_TYPE_LUMA);
     }
+#endif
   }
 #endif
 #else
-- 
2.14.1.windows.1

